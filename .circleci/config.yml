# Ruby CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-ruby/ for more details

version: 2
jobs:
  build:
    parallelism: 3
    environment:
      - TZ=Asia/Tokyo

      - POSTGRES_HOST=127.0.0.1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

      - REDIS_URL=redis://127.0.0.1:6379/0

    docker:
      # The primary container is an instance of the first image listed. The job's commands run in this container.
      # The secondary and later container is an instance of the listed image which is run in a common network where ports exposed on the primary container are available on localhost.
      - image: upluse10/ictsc-score-server:api-develop
        environment:
          - RAILS_ENV=test
          - API_STAFF_PASSWORD=staff
          - API_SESSION_EXPIRE_MINUTES=1440

          # 空にしないと/usr/src/appを参照する
          - BUNDLE_GEMFILE=

      # テスト高速化(3min -> 2min)
      - image: circleci/postgres:11.3-alpine-postgis-ram

      # circleci/redisにしても早くならなかった
      - image: redis:5.0.4-alpine

    steps:
      - checkout

      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #       # 末尾のバージョンをインクリメントすることで、実質キャッシュクリアができる(restoreとsaveは揃える)
      #       - bundle-cache-{{ checksum "api/Gemfile.lock" }}-v1
      #       # fallback to using the latest cache if no exact match is found
      #       - bundle-cache-

      - run:
          name: install dependencies
          working_directory: /root/project/api
          # イメージで既にインストールされているGemを使い回すと早い
          # なぜか--pathを指定すると強制的に新規インストールが始まる
          command: |
            bundle install --jobs=4 --retry=3

      # - save_cache:
      #     key: bundle-cache-{{ checksum "api/Gemfile.lock" }}-v1
      #     paths:
      #       - /usr/local/bundle

      # db:setupは必要ないので先に実行できる
      - run:
          name: Run rubocop
          working_directory: /root/project/api
          command: bundle exec rubocop

      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://127.0.0.1:6379 -timeout 10s

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 10s

      - run:
          name: Setup DB
          working_directory: /root/project/api
          command: bundle exec rake db:setup

      - run:
          name: Run spec
          working_directory: /root/project/api
          command: |
            mkdir -p /tmp/test-results/rspec
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec/results.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - run:
          name: Update audit gemes
          working_directory: /root/project/api
          command: bundle update bundler-audit brakeman

      - run:
          name: Run bundler-audit
          working_directory: /root/project/api
          command: bundle audit check --update

      - run:
          name: Run brakeman
          working_directory: /root/project/api
          command: bundle exec brakeman

      # Save test results for timing analysis
      - store_test_results:
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results
          # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs

      # Save coverage
      # - store_artifacts:
      #     # TODO: 並列非対応
      #     path: /root/project/api/coverage
