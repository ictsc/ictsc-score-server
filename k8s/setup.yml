# common setup phase
- hosts: cloud_servers
  become: yes
  vars_files:
   - var.yml
  tasks:
  - name: add a ictsc group
    group: name=ictsc state=present
  - name: add a new user
    user:
      name: "{{ item.name }}"
      uid: "{{ item.uid}}"
      password: "{{ item.password | password_hash('sha512') }}"
      group: "{{ item.name }}"
      shell: /bin/bash
      groups: sudo
      state: present
    with_items:
      - "{{ users }}"
  - name: mkdir .ssh
    file:
      path: /home/{{ item.name }}/.ssh/
      state: directory
      owner: "{{ item.name }}"
      group: sudo
      mode: 0700
    with_items:
      - "{{ users }}"
  - name: add authorized_key
    authorized_key:
      user: "{{ item.name }}"
      key: "{{ lookup('file', './{{ item.name }}.pub') }}"
    with_items:
      - "{{ users }}"
  - name: add to sudoers
    lineinfile:
      dest: /etc/sudoers
      line: "{{ item.name }} ALL=(ALL) NOPASSWD:ALL"
    with_items:
      - "{{ users }}"

# docker setup phase
- hosts: cloud_servers
  become: yes
  tasks:
  - name: Update and Upgrade
    apt:
        update_cache: "yes"
        upgrade: "dist"
  - name: remove "docker docker-engine docker.io" packages
    apt:
        name: "{{ item }}"
        state: absent
    with_items:
        - docker
        - docker-engine
        - docker.io
        - containerd
        - runc
  - name: update apt repository
    apt:
        update_cache: yes
  - name: install "apt-transport-https ca-certificates curl software-properties-common" packages
    apt:
        name: "{{ item }}"
        state: present
    with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - make
  - name: add docker's official GPG key
    apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
  - name: add docker repository
    apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present
  - name: update apt repository
    apt:
        update_cache: yes
  - name: install docker-ce
    apt:
        name: "{{ item }}"
        state: present
    with_items:
        - docker-ce
        - docker-ce-cli
        - containerd.io

# kubernetes setup phase
- hosts: cloud_servers
  become: yes
  tasks:
      - name: Update and Upgrade
        apt:
            update_cache: "yes"
            upgrade: "dist"
      - name: add gpg key
        apt_key:
            url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      - name: add k8s apt repository
        apt_repository:
            repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      - name: install "kubeadm kubelet kubectl" packages
        apt:
            name: "{{ item }}"
            state: present
        with_items:
            - kubeadm
            - kubelet
            - kubectl
      - name: Remove swapfile from /etc/fstab
        mount:
            name: swap
            fstype: swap
            state: absent
      - name: Disable swap
        command: swapoff -a
        when: ansible_swaptotal_mb > 0
      - name: Set docker service to start on boot
        service: name=docker enabled=yes
      - name: Set kubelet service to start on boot
        service: name=kubelet enabled=yes
