default: &default
  adapter: mysql2
  # encoding: utf8
  charset: utf8mb4
  encoding: utf8mb4
  collation: utf8mb4_general_ci
  reconnect: true
  pool: <%= ENV.fetch("RAILS_MAX_THREADS", 20) %>
  # pool: <%= ENV.fetch('MYSQL_POOL', 20) || 20 %>
  host: <%= ENV.fetch('MYSQL_HOST', 'localhost') %>
  port: <%= ENV.fetch('MYSQL_PORT', 3306) %>
  username: <%= ENV.fetch('MYSQL_USER', 'ictsc_score_server') %>
  password: <%= ENV.fetch('MYSQL_PASSWORD', 'ictsc_score_server') %>
  database: <%= ENV.fetch('MYSQL_DATABASE', 'ictsc_score_server') %>

development:
  <<: *default
  # database: api_development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  # database: api_test

# As with config/secrets.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  # database: api_production
  # username: api
  # password: <%= ENV['API_DATABASE_PASSWORD'] %>
